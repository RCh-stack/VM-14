p 0

i 5
i 5		// loading values into registers
i 12
i 3

c 20 0 1 0	// making an unconditional forward transition
c 21 2 1 1	// making an unconditional relative jump
c 22 1 0 2	// making an unconditional indirect jump
c 23 0 1 3	// check flags if true - conditional forward jump
c 26 0 1 0	// go to the subroutine, load address to register 0
c 27 0 0 0	// subroutine exit

c 10 0 0 0	
c 10 0 0 1	
c 10 0 0 2	// output results
c 10 0 0 3	

s 0		// stop the processor